package com.example.demo.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.kafka.core.KafkaTemplate;
import org.springframework.stereotype.Service;
import org.springframework.web.reactive.function.BodyInserters;
import org.springframework.web.reactive.function.client.WebClient;

import com.example.demo.dao.MovimientosDTO;
import com.example.demo.entity.Cliente;

@Service
public class MovimientosService implements IMovimientosService {

	@Autowired
	private IClienteService clienteService;

	private WebClient webClient;

	@Autowired
	private KafkaTemplate<String, MovimientosDTO> kafkaTemplateMovimientos;

	@Override
	public void guardarMovimientoNuevo(MovimientosDTO movimientosDTO) {

		if (movimientosDTO.getIdentificacion() != null) {

			Cliente cliente = clienteService.obtenerClienteByIdentificacion(movimientosDTO.getIdentificacion());
			if (cliente != null) {

				// Mandamos a crear o consultar la cuenta.
				kafkaTemplateMovimientos.send("movimientos", movimientosDTO);
			}

		}

	}

	@Override
	public String guardarMovimientosWebClient(MovimientosDTO movimientosDTO) {
		String response = "";
		if (movimientosDTO.getIdentificacion() != null) {
			getWebClient();
			Cliente cliente = clienteService.obtenerClienteByIdentificacion(movimientosDTO.getIdentificacion());
			if (cliente != null) {
				response = webClient.post().contentType(MediaType.APPLICATION_JSON)
						.body(BodyInserters.fromValue(movimientosDTO)).retrieve().bodyToMono(String.class).block();

			}
		}
		return response;

	}

	public void getWebClient() {
		this.webClient = WebClient.builder().baseUrl("http://127.0.0.1:8081/movimientos/registrarMovimiento").build();

	}

}
